openapi: 3.0.0
info:
  title: Shop3 API
  description: Documentation for Shop3 API (Common)
  version: 1.0.0
servers:
  - url: https://shop3-api.codingbombs.com:3001
  - url: http://localhost:3000

paths:
  /api-common/v1/register/email:
    post:
      summary: Register a new user by email
      tags:
        - Registration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - verificationCode
                - password
                - passwordConfirm
              properties:
                email:
                  type: string
                  format: email
                  example: johnsm@gmail.com
                verificationCode:
                  type: string
                  example: '123456'
                password:
                  type: string
                  example: securePassword
                passwordConfirm:
                  type: string
                  example: securePassword
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Bad Request
        '409':
          description: Conflict
        '500':
          description: Internal Server Error

  /api-common/v1/register/phone:
    post:
      summary: Register a new user by phone number
      tags:
        - Registration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - phone
                - verificationCode
                - password
                - passwordConfirm
              properties:
                phone:
                  type: string
                  example: '0123456789'
                verificationCode:
                  type: string
                  example: '123456'
                password:
                  type: string
                  example: securePassword
                passwordConfirm:
                  type: string
                  example: securePassword
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Bad Request
        '409':
          description: Conflict
        '500':
          description: Internal Server Error

  /api-common/v1/auth/is_login:
    get:
      summary: Check if user is logged in or not
      tags:
        - Authentication
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      uuid:
                        type: string
                        format: uuid
                        example: 69b6207f-600f-4188-9a7b-569f0d9e476b
                      userGroupId:
                        type: integer
                        example: 2
                      iat:
                        type: integer
                        example: 1715867409
                      exp:
                        type: integer
                        example: 1715953809

        '400':
          description: Bad Request
        '500':
          description: Internal Server Error

  /api-common/v1/auth/me:
    get:
      summary: Get the current user's data
      tags:
        - Authentication
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Detail of the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error

  /api-common/v1/auth/statistics:
    get:
      summary: Get the current user's statistics
      tags:
        - Authentication
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Statistics of the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatisticsResponse'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error

  /api-common/v1/auth/refresh_token:
    post:
      summary: Refresh the access token
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
                  example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwiaWF0IjoxNzEyODA4ODA2LCJleHAiOjE3MTU0MDA4MDZ9.q5nQpO8LJjAsR0DGZwGqpcpAT1nBQQ73XvsiXckLAOo'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      accessToken:
                        type: string
                        example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwiaWF0IjoxNzEyODA4OTc2LCJleHAiOjE3MTI4MDk4NzZ9.n1h2ue1hn8j5ZfSwtqtpOokDyMp8dPEu-K5Luw4aiwY'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error

  /api-common/v1/auth/login/email:
    post:
      summary: Login by email
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  example: johnsm@gmail.com
                password:
                  type: string
                  example: securePassword
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error

  /api-common/v1/auth/login/phone:
    post:
      summary: Login by phone
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - phone
                - password
              properties:
                phone:
                  type: string
                  example: '0123456789'
                password:
                  type: string
                  example: securePassword
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error

  /api-common/v1/auth/reset_password/email:
    post:
      summary: Reset password by email
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
                - passwordConfirm
                - verificationCode
              properties:
                email:
                  type: string
                  format: email
                  example: johnsm@gmail.com
                password:
                  type: string
                  example: securePassword
                passwordConfirm:
                  type: string
                  example: securePassword
                verificationCode:
                  type: string
                  example: '123456'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrueResponse'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error

  /api-common/v1/auth/reset_password/phone:
    post:
      summary: Reset password by phone
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - phone
                - password
                - passwordConfirm
                - verificationCode
              properties:
                phone:
                  type: string
                  example: '0123456789'
                password:
                  type: string
                  example: securePassword
                passwordConfirm:
                  type: string
                  example: securePassword
                verificationCode:
                  type: string
                  example: '123456'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrueResponse'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error

  /api-common/v1/auth/generate_otp/email:
    post:
      summary: Generate OTP code by email
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  example: 'johnsm@gmail.com'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrueResponse'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error

  /api-common/v1/auth/generate_otp/phone:
    post:
      summary: Generate OTP code by phone
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - phone
              properties:
                phone:
                  type: string
                  example: '0123456789'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrueResponse'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error

  /api-common/v1/auth/confirm_otp:
    post:
      summary: Confirm if the OTP code is valid
      description: |
        1. `reciever` parameter can be an email address or a phone number
        2. `remove` parameter is optional, send it as `true` if you want to remove that OTP after the confirmation
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - receiver
                - code
              properties:
                receiver:
                  type: string
                  example: johnsm@gmail.com
                code:
                  type: string
                  example: 123456
                remove:
                  type: boolean
                  default: false
                  example: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrueResponse'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error

  /api-common/v1/auth/logout:
    post:
      summary: Logout
      tags:
        - Authentication
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error

  /api-common/v1/languages:
    get:
      summary: Get all languages
      tags:
        - Languages
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of Languages
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/LanguageResponse'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error

  /api-common/v1/currencies:
    get:
      summary: Get all currencies
      tags:
        - Currencies
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of Currencies
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/CurrencyResponse'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error

  /api-common/v1/categories:
    get:
      summary: Get all categories
      tags:
        - Categories
      security:
        - bearerAuth: []
      parameters:
        - name: keyword
          in: query
          description: Search by product name
          example: Example
          required: false
          style: form
          schema:
            type: string
            default: null
        - name: parentId
          in: query
          description: ID of the parent category
          required: false
          schema:
            type: integer
        - name: page
          in: query
          description: The page number for paginated results
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - name: limit
          in: query
          description: Maximum number of results to return
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: sortField
          in: query
          description: Sort result by field
          required: false
          schema:
            type: string
            enum: ['id', 'name', 'createdAt', 'updatedAt']
        - name: sortOrder
          in: query
          description: Sort result in direction
          required: false
          schema:
            type: string
            enum: ['asc', 'desc']
      responses:
        '200':
          description: A list of categories
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalItems:
                    type: integer
                    example: 100
                  totalPages:
                    type: integer
                    example: 10
                  currentPage:
                    type: integer
                    example: 1
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/CategoryResponse'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error

  /api-common/v1/categories/{id}:
    get:
      summary: Get a category
      tags:
        - Categories
      parameters:
        - name: id
          in: path
          description: Category Id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Detail of a category
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    $ref: '#/components/schemas/CategoryResponse'

  /api-common/v1/products:
    get:
      summary: Get list of products
      tags:
        - Products
      parameters:
        - name: keyword
          in: query
          description: Search by product name, ID or seller SKU
          example: jacket
          required: false
          style: form
          schema:
            type: string
            default: null
        - name: minPrice
          in: query
          description: Minimum price
          example: 10000
          required: false
          style: form
          schema:
            type: integer
            format: int32
            default: null
        - name: maxPrice
          in: query
          description: Maximum price
          example: 200000
          required: false
          style: form
          schema:
            type: integer
            format: int32
            default: null
        - name: categoryId
          in: query
          description: Search by Category ID(s) (can be multiple values, comma separated)
          example: 1,2
          required: false
          style: form
          schema:
            type: string
            default: null
        - name: codStatus
          in: query
          description: Search by COD Status
          example: true
          required: false
          style: form
          schema:
            type: boolean
            default: null
        - name: page
          in: query
          description: The page number for paginated results
          required: false
          schema:
            type: integer
            format: int32
            default: 1
        - name: limit
          in: query
          description: Maximum number of results to return
          required: false
          schema:
            type: integer
            format: int32
            default: 10
        - name: sortField
          in: query
          description: Sort result by field
          required: false
          schema:
            type: string
            enum: ['id', 'name', 'uniqueId', 'price', 'createdAt', 'updatedAt']
        - name: sortOrder
          in: query
          description: Sort result in direction
          required: false
          schema:
            type: string
            enum: ['asc', 'desc']
      responses:
        '200':
          description: A list of products
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalItems:
                    type: integer
                    example: 100
                  totalPages:
                    type: integer
                    example: 10
                  currentPage:
                    type: integer
                    example: 1
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProductResponse'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error

  /api-common/v1/products/{id}:
    get:
      summary: Get a product
      tags:
        - Products
      parameters:
        - name: id
          in: path
          description: Product Id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Detail of a product
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    $ref: '#/components/schemas/ProductResponse'
        '400':
          description: Bad Request
        '404':
          description: Product not found
        '500':
          description: Internal Server Error

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    TrueResponse:
      type: object
      properties:
        data:
          type: object
          example: true

    LoginResponse:
      type: object
      properties:
        accessToken:
          type: string
          example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwiaWF0IjoxNzEyODA4OTc2LCJleHAiOjE3MTI4MDk4NzZ9.n1h2ue1hn8j5ZfSwtqtpOokDyMp8dPEu-K5Luw4aiwY'
        refreshToken:
          type: string
          example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MiwiaWF0IjoxNzEyODA4ODA2LCJleHAiOjE3MTU0MDA4MDZ9.q5nQpO8LJjAsR0DGZwGqpcpAT1nBQQ73XvsiXckLAOo'

    UserResponse:
      type: object
      properties:
        id:
          type: integer
          example: 1
        uuid:
          type: string
          format: uuid
          example: 6252290c-1a4e-4556-a8cd-e3e32e316fd7
        shopId:
          type: integer
          example: 1
        name:
          type: string
          example: John Smith
        email:
          type: string
          example: johnsm@gmail.com
        phone:
          type: string
          example: '0123456789'
        avatar:
          type: string
          example: https://storage.googleapis.com/dummy/file_44103033-d9f4-4933-bacc-11701c90e58a.jpg
        gender:
          type: integer
          example: 1
        dob:
          type: string
          format: date-time
        languageId:
          type: integer
          example: 1
        currencyId:
          type: integer
          example: 1
        subscribeMailingList:
          type: boolean
        isPhoneValidated:
          type: boolean
        isEmailValidated:
          type: boolean
        isActive:
          type: boolean
        lastLogin:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    StatisticsResponse:
      type: object
      properties:
        id:
          type: integer
          example: 1
        uuid:
          type: string
          format: uuid
          example: 6252290c-1a4e-4556-a8cd-e3e32e316fd7
        reviewsCount:
          type: integer
          example: 100
        shop:
          type: object
          properties:
            id:
              type: integer
              example: 1
            shopName:
              type: string
              example: Test Shop 101
            productsCount:
              type: integer
              example: 100

    LanguageResponse:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: English
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    CurrencyResponse:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: U.S. dollar
        code:
          type: string
          example: USD
        symbol:
          type: string
          example: $
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    CategoryResponse:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: Bathroom Supplies
        image:
          type: string
          format: uri
          example: https://storage.googleapis.com/dummy.jpg
        parentId:
          type: integer
          example: 1
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Variant:
      type: object
      properties:
        name:
          type: string
          description: The name of the variant category, such as size or color.
          example: Size
        options:
          type: array
          items:
            type: string
            example: Medium
          description: A list of available options for the variant category.

    Option:
      type: object
      properties:
        name:
          type: string
          description: The name of the option, such as 'Size' or 'Color'.
          example: Size
        value:
          type: string
          description: The value corresponding to the option name, such as 'Medium' or 'Red'.
          example: Medium

    ProductVariant:
      type: object
      properties:
        options:
          type: array
          items:
            $ref: '#/components/schemas/Option'
          description: A list of option objects defining the characteristics of the product variant.
        price:
          type: integer
          format: float
          description: The price of the product variant.
          example: 100000
        sku:
          type: string
          description: The stock keeping unit identifier for the product variant.
          example: SKU001
        quantity:
          type: integer
          description: The available quantity of the product variant.
          example: 100

    ProductResponse:
      type: object
      properties:
        id:
          type: integer
          example: 1
        uniqueId:
          type: string
          example: '17129807205638693702'
        name:
          type: string
          example: Sample Product
        description:
          type: string
          example: Dummy dummy dummy
        minPrice:
          type: number
          format: float
          example: 100
        maxPrice:
          type: number
          format: float
          example: 500
        shopId:
          type: integer
          example: 1
        productStatusId:
          type: integer
          example: 1
        thumbnailImage:
          type: string
          example: 'https://storage.googleapis.com/dummy/file_44103033-d9f4-4933-bacc-11701c90e58a.jpg'
        thumbnailVideo:
          type: string
          example: 'https://storage.googleapis.com/dummy/file_44103033-d9f4-4933-bacc-11701c90e58a.jpg'
        productImages:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 1
              file:
                type: string
                example: 'https://storage.googleapis.com/dummy/file_44103033-d9f4-4933-bacc-11701c90e58a.jpg'
        productVideos:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                example: 1
              file:
                type: string
                example: 'https://storage.googleapis.com/dummy/file_44103033-d9f4-4933-bacc-11701c90e58a.mp4'
        variants:
          type: array
          items:
            $ref: '#/components/schemas/Variant'
        productVariants:
          type: array
          items:
            $ref: '#/components/schemas/ProductVariant'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
