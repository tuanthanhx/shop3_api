openapi: 3.0.0
info:
  title: Shop3 API
  description: Documentation for Shop3 API (Seller)
  version: 1.0.0
servers:
  - url: http://127.0.0.1:3000

paths:
  /api-seller/v1/media/product_images:
    post:
      summary: Upload Product Images
      tags:
        - Media
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - files
              properties:
                files:
                  type: array
                  maxItems: 9
                  items:
                    type: string
                    format: binary
      responses:
        '200':
          description: Uploaded
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    maxItems: 9
                    items:
                      type: string
                      example: https://storage.googleapis.com/dummy.jpg
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error

  /api-seller/v1/media/product_video:
    post:
      summary: Upload Product Video
      tags:
        - Media
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: Uploaded
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: string
                    example: https://storage.googleapis.com/dummy.jpg
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error

  /api-seller/v1/media/product_variant_image:
    post:
      summary: Upload Product Variant Image
      tags:
        - Media
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: Uploaded
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: string
                    example: https://storage.googleapis.com/dummy.jpg
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error

  /api-seller/v1/categories:
    get:
      summary: Get all categories
      tags:
        - Categories
      security:
        - bearerAuth: []
      parameters:
        - name: parentId
          in: query
          description: ID of the parent category
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: A list of categories
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error

  /api-seller/v1/categories/:id/attributes:
    get:
      summary: Get all attributes of the category
      tags:
        - Categories
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: ID of the category to get attributes
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A list of attributes of the category
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          format: int32
                          example: 1
                        name:
                          type: string
                          example: 'Season'
                        attributeValues:
                          type: array
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                                format: int32
                                example: 1
                              name:
                                type: string
                                example: 'Spring'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error

  /api-seller/v1/brands:
    get:
      summary: Get all brands
      tags:
        - Brands
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of brands
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error

    post:
      summary: Create a new brand
      tags:
        - Brands
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                  example: New Brand
                description:
                  type: string
                  example: Dummy
      responses:
        '201':
          description: The newly created brand
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error

  /api-seller/v1/sellers/business_types:
    get:
      summary: Get a list of business types
      tags:
        - Sellers
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A JSON array of business types
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    $ref: '#/components/schemas/SellerBusinessTypesResponse'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error

  /api-seller/v1/sellers/verification:
    get:
      summary: Get current verification data
      tags:
        - Sellers
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    $ref: '#/components/schemas/ShopResponse'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
    post:
      summary: Create a new shop verification data
      description: |
        1. To "Save", set `isSubmitted` as `false`
        2. To "Submit", set `isSubmitted` as `true`
        3. If `businessType` is 1, fields start with `household*` are required
        3. If `businessType` is 2, fields start with `individual*` are required
        3. If `businessType` is 3, fields start with `corporate*` are required
      tags:
        - Sellers
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - shopName
                - businessType
              properties:
                businessType:
                  type: number
                  enum: [1, 2, 3]
                  example: 1
                shopName:
                  type: string
                  example: 'Sample'
                householdBusinessRegistrationDocument1:
                  type: string
                  format: binary
                householdBusinessRegistrationDocument2:
                  type: string
                  format: binary
                householdBusinessRegistrationDocument3:
                  type: string
                  format: binary
                householdBusinessName:
                  type: string
                  example: 'My Company'
                householdBusinessRegistrationNumber:
                  type: string
                  example: 'AB100000'
                householdBusinessOwnerName:
                  type: string
                  example: 'John Smith'
                householdBusinessOwnerIdNumber:
                  type: string
                  example: '123456789'
                individualIdentityCardFront:
                  type: string
                  format: binary
                individualIdentityCardBack:
                  type: string
                  format: binary
                individualIdentityCardNumber:
                  type: string
                  example: '123456789'
                individualOwnerDob:
                  type: string
                  format: date-time
                individualBusinessOwnerName:
                  type: string
                  example: 'John Smith'
                individualResidentialAddress:
                  type: string
                  example: '206 Lorem Ipsum st.'
                individualProductCategoryId:
                  type: integer
                  example: 1
                corporateCompanyRegistrationDocument1:
                  type: string
                  format: binary
                corporateCompanyRegistrationDocument2:
                  type: string
                  format: binary
                corporateCompanyRegistrationDocument3:
                  type: string
                  format: binary
                corporateCompanyName:
                  type: string
                  example: 'My Company'
                corporateEnterpiseCodeNumber:
                  type: string
                  example: 'AB100000'
                useCurrentEmail:
                  type: boolean
                newEmail:
                  type: string
                  format: email
                  example: johnsm@gmail.com
                newEmailOtp:
                  type: string
                useCurrentPhone:
                  type: string
                  example: 123456
                newPhone:
                  type: string
                  format: phone
                  example: '0123456789'
                newPhoneOtp:
                  type: string
                  example: 123456
                subscribeMailingList:
                  type: boolean
                  example: true
                isSubmitted:
                  type: boolean
                  example: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    $ref: '#/components/schemas/ShopResponse'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error

    put:
      summary: Update a new shop verification data
      description: |
        1. To "Save", set `isSubmitted` as `false`
        2. To "Submit", set `isSubmitted` as `true`
        3. If `businessType` is 1, fields start with `household*` are required
        3. If `businessType` is 2, fields start with `individual*` are required
        3. If `businessType` is 3, fields start with `corporate*` are required
      tags:
        - Sellers
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                businessType:
                  type: number
                  enum: [1, 2, 3]
                  example: 1
                shopName:
                  type: string
                  example: 'Sample'
                householdBusinessRegistrationDocument1:
                  type: string
                  format: binary
                householdBusinessRegistrationDocument2:
                  type: string
                  format: binary
                householdBusinessRegistrationDocument3:
                  type: string
                  format: binary
                householdBusinessName:
                  type: string
                  example: 'My Company'
                householdBusinessRegistrationNumber:
                  type: string
                  example: 'AB100000'
                householdBusinessOwnerName:
                  type: string
                  example: 'John Smith'
                householdBusinessOwnerIdNumber:
                  type: string
                  example: '123456789'
                individualIdentityCardFront:
                  type: string
                  format: binary
                individualIdentityCardBack:
                  type: string
                  format: binary
                individualIdentityCardNumber:
                  type: string
                  example: '123456789'
                individualOwnerDob:
                  type: string
                  format: date-time
                individualBusinessOwnerName:
                  type: string
                  example: 'John Smith'
                individualResidentialAddress:
                  type: string
                  example: '206 Lorem Ipsum st.'
                individualProductCategoryId:
                  type: integer
                  example: 1
                corporateCompanyRegistrationDocument1:
                  type: string
                  format: binary
                corporateCompanyRegistrationDocument2:
                  type: string
                  format: binary
                corporateCompanyRegistrationDocument3:
                  type: string
                  format: binary
                corporateCompanyName:
                  type: string
                  example: 'My Company'
                corporateEnterpiseCodeNumber:
                  type: string
                  example: 'AB100000'
                useCurrentEmail:
                  type: boolean
                newEmail:
                  type: string
                  format: email
                  example: johnsm@gmail.com
                newEmailOtp:
                  type: string
                useCurrentPhone:
                  type: string
                  example: 123456
                newPhone:
                  type: string
                  format: phone
                  example: '0123456789'
                newPhoneOtp:
                  type: string
                  example: 123456
                subscribeMailingList:
                  type: boolean
                  example: true
                isSubmitted:
                  type: boolean
                  example: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    $ref: '#/components/schemas/ShopResponse'
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error

  /api-seller/v1/sellers/logistics_services/subscribe:
    post:
      summary: Subscribe to a shipping service
      tags:
        - Sellers / Logistics Services
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - serviceId
              properties:
                serviceId:
                  type: integer
                  example: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrueResponse'
        '400':
          description: Bad Request
        '404':
          description: Logistics service was not found
        '500':
          description: Internal Server Error

  /api-seller/v1/sellers/logistics_services/unsubscribe:
    post:
      summary: Unsubscribe to a shipping service
      tags:
        - Sellers / Logistics Services
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - serviceId
              properties:
                serviceId:
                  type: integer
                  example: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TrueResponse'
        '400':
          description: Bad Request
        '404':
          description: Logistics service was not found
        '500':
          description: Internal Server Error

  /api-seller/v1/sellers/logistics_services/estimate_shipping_fee:
    post:
      summary: Estimate shipping fee
      tags:
        - Sellers / Logistics Services
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - serviceId
                - weight
                - width
                - height
                - length
              properties:
                serviceId:
                  type: integer
                  example: 1
                weight:
                  type: integer
                  example: 1000
                width:
                  type: integer
                  example: 20
                height:
                  type: integer
                  example: 20
                length:
                  type: integer
                  example: 20
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  estimatedShippingFee:
                    type: number
                    format: float
                    example: 10000
        '400':
          description: Bad Request
        '404':
          description: Logistics service was not found
        '500':
          description: Internal Server Error

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    TrueResponse:
      type: object
      properties:
        data:
          type: object
          example: true

    SellerBusinessTypesResponse:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
            example: Household
          description:
            type: string
            example: Dummy

    ShopResponse:
      type: object
      properties:
        id:
          type: integer
          example: 1
        sellerBusinessTypeId:
          type: integer
          example: 1
        shopName:
          type: string
          example: 'My Shop'
        userId:
          type: integer
          example: 1
        email:
          type: string
          format: email
          example: johnsm@gmail.com
        phone:
          type: string
          format: phone
          example: '0123456789'
        subscribeMailingList:
          type: boolean
          example: true
        householdBusinessRegistrationDocument1:
          type: string
          example: 'https://storage.googleapis.com/dummy/file_44103033-d9f4-4933-bacc-11701c90e58a.jpg'
        householdBusinessRegistrationDocument2:
          type: string
          example: 'https://storage.googleapis.com/dummy/file_44103033-d9f4-4933-bacc-11701c90e58a.jpg'
        householdBusinessRegistrationDocument3:
          type: string
          example: 'https://storage.googleapis.com/dummy/file_44103033-d9f4-4933-bacc-11701c90e58a.jpg'
        householdBusinessName:
          type: string
          example: 'My Company'
        householdBusinessRegistrationNumber:
          type: string
          example: 'AB100000'
        householdBusinessOwnerName:
          type: string
          example: 'John Smith'
        householdBusinessOwnerIdNumber:
          type: string
          example: '123456789'
        individualIdentityCardFront:
          type: string
          example: 'https://storage.googleapis.com/dummy/file_44103033-d9f4-4933-bacc-11701c90e58a.jpg'
        individualIdentityCardBack:
          type: string
          example: 'https://storage.googleapis.com/dummy/file_44103033-d9f4-4933-bacc-11701c90e58a.jpg'
        individualIdentityCardNumber:
          type: string
          example: '123456789'
        individualOwnerDob:
          type: string
          format: date-time
        individualBusinessOwnerName:
          type: string
          example: 'John Smith'
        individualResidentialAddress:
          type: string
          example: '206 Lorem Ipsum st.'
        individualProductCategoryId:
          type: integer
          example: 1
        corporateCompanyRegistrationDocument1:
          type: string
          example: 'https://storage.googleapis.com/dummy/file_44103033-d9f4-4933-bacc-11701c90e58a.jpg'
        corporateCompanyRegistrationDocument2:
          type: string
          example: 'https://storage.googleapis.com/dummy/file_44103033-d9f4-4933-bacc-11701c90e58a.jpg'
        corporateCompanyRegistrationDocument3:
          type: string
          example: 'https://storage.googleapis.com/dummy/file_44103033-d9f4-4933-bacc-11701c90e58a.jpg'
        corporateCompanyName:
          type: string
          example: 'My Company'
        corporateEnterpiseCodeNumber:
          type: string
          example: 'AB100000'
        isSubmitted:
          type: boolean
          example: false
        isVerified:
          type: boolean
          example: false
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
